Results Stiff-Sloppy optimization

params_optimized: [1.08623774e-01 9.22529946e-05 2.12728276e+01 1.07886272e+00
 7.56851062e-04 1.20363365e-02 9.20997390e-02 5.92852874e-01
 2.29072833e-01 1.99558667e+00 6.31826643e-02 5.46117861e-02
 1.19568221e-02]
loss: 0.0519988524254104

num_components: 1
Vs: tensor([[ 2.1440e-02],
        [ 9.7930e-01],
        [ 1.9428e-01],
        [ 4.5638e-02],
        [ 1.7040e-02],
        [ 1.3385e-06],
        [-1.2811e-06],
        [ 1.9836e-02],
        [ 3.3908e-04],
        [-3.3554e-05],
        [-6.9300e-07],
        [-8.4869e-07],
        [-2.7264e-09]], dtype=torch.float64)
Vl: tensor([[-1.0767e-01,  5.5085e-01,  4.4571e-01,  6.9616e-01,  1.9539e-02,
         -2.0708e-02,  2.0309e-02, -9.2616e-04,  1.1086e-04,  2.1462e-04,
          1.9855e-04,  1.1148e-06],
        [-6.9101e-02,  1.1886e-01,  1.7128e-02, -1.4639e-01, -6.6157e-03,
         -1.0960e-02,  1.3379e-02, -3.6887e-04,  9.1446e-05,  3.6511e-05,
          6.7348e-05,  2.3403e-07],
        [ 1.0943e-01, -7.0938e-01, -1.3045e-01,  6.5496e-01,  3.2507e-02,
          9.4155e-04, -2.6101e-03, -1.0041e-04, -2.6045e-05,  1.1223e-04,
          2.3284e-05,  3.7598e-07],
        [ 9.3891e-01,  1.9669e-02,  3.3007e-01, -8.2699e-02, -1.3536e-02,
         -1.3623e-04, -2.0672e-04,  8.3021e-06, -2.8641e-05, -5.5913e-05,
          4.6049e-05, -6.1495e-08],
        [-5.0206e-03,  1.9342e-02,  1.4019e-02,  1.6329e-02, -1.5424e-02,
          6.4526e-01, -7.6265e-01,  2.3597e-02, -5.0677e-03, -3.7109e-03,
         -4.3626e-03, -1.9158e-05],
        [ 2.9378e-05, -1.1630e-05,  1.0521e-04,  6.5735e-05, -1.8464e-04,
         -1.2242e-02, -2.7131e-03,  2.2814e-01,  4.6917e-01,  2.1171e-01,
         -8.2635e-01,  8.9418e-04],
        [-4.0836e-05, -7.4659e-05,  6.6260e-05, -8.5032e-05, -3.2779e-03,
          2.6401e-02,  5.5145e-03, -6.7237e-01, -5.1775e-01,  3.5840e-01,
         -3.8816e-01,  1.1076e-03],
        [ 3.0009e-01,  4.2238e-01, -8.2052e-01,  2.3561e-01,  4.8651e-02,
          1.3063e-04, -1.7382e-03, -2.0411e-04, -3.8496e-05,  2.3987e-04,
         -1.0482e-04,  2.4265e-09],
        [ 3.9033e-03,  7.0119e-03, -3.9999e-02,  4.8275e-02, -9.9044e-01,
          8.2564e-02,  9.0439e-02,  4.0811e-03,  4.0617e-03, -9.3771e-04,
          1.8925e-03,  3.4706e-06],
        [-1.0848e-04,  3.5318e-04,  5.2056e-03, -3.1158e-03,  1.2144e-01,
          7.5835e-01,  6.3984e-01,  2.3324e-02,  1.3616e-02, -4.1256e-04,
          7.0195e-04, -8.4170e-06],
        [-1.6841e-05, -4.6538e-05,  6.3770e-05, -2.0529e-04,  8.6031e-04,
          1.8074e-02, -1.0949e-02, -6.9725e-01,  6.8183e-01, -1.5738e-01,
          1.5406e-01, -1.4295e-03],
        [-1.7182e-05, -4.7766e-05,  1.2765e-04, -2.1203e-04,  4.3925e-04,
         -1.3806e-03, -6.2653e-03,  9.2734e-02,  2.1611e-01,  8.9551e-01,
          3.7777e-01, -4.2259e-03],
        [-3.6299e-08, -2.0111e-07,  4.8477e-07, -2.0288e-06,  1.1013e-05,
          2.0192e-05, -5.5376e-05, -6.3515e-05,  2.0419e-03,  2.9731e-03,
          2.9854e-03,  9.9999e-01]], dtype=torch.float64)
eigvals_sorted: tensor([9.3752e+01, 2.3377e-01, 1.3183e-02, 6.9804e-04, 6.2398e-05, 2.8008e-06,
        1.0279e-06, 1.0097e-06, 1.0001e-06, 1.0000e-06, 1.0000e-06, 1.0000e-06,
        1.0000e-06], dtype=torch.float64)
eigvecs_sorted: tensor([[ 2.1440e-02, -1.0767e-01,  5.5085e-01,  4.4571e-01,  6.9616e-01,
          1.9539e-02, -2.0708e-02,  2.0309e-02, -9.2616e-04,  1.1086e-04,
          2.1462e-04,  1.9855e-04,  1.1148e-06],
        [ 9.7930e-01, -6.9101e-02,  1.1886e-01,  1.7128e-02, -1.4639e-01,
         -6.6157e-03, -1.0960e-02,  1.3379e-02, -3.6887e-04,  9.1446e-05,
          3.6511e-05,  6.7348e-05,  2.3403e-07],
        [ 1.9428e-01,  1.0943e-01, -7.0938e-01, -1.3045e-01,  6.5496e-01,
          3.2507e-02,  9.4155e-04, -2.6101e-03, -1.0041e-04, -2.6045e-05,
          1.1223e-04,  2.3284e-05,  3.7598e-07],
        [ 4.5638e-02,  9.3891e-01,  1.9669e-02,  3.3007e-01, -8.2699e-02,
         -1.3536e-02, -1.3623e-04, -2.0672e-04,  8.3021e-06, -2.8641e-05,
         -5.5913e-05,  4.6049e-05, -6.1495e-08],
        [ 1.7040e-02, -5.0206e-03,  1.9342e-02,  1.4019e-02,  1.6329e-02,
         -1.5424e-02,  6.4526e-01, -7.6265e-01,  2.3597e-02, -5.0677e-03,
         -3.7109e-03, -4.3626e-03, -1.9158e-05],
        [ 1.3385e-06,  2.9378e-05, -1.1630e-05,  1.0521e-04,  6.5735e-05,
         -1.8464e-04, -1.2242e-02, -2.7131e-03,  2.2814e-01,  4.6917e-01,
          2.1171e-01, -8.2635e-01,  8.9418e-04],
        [-1.2811e-06, -4.0836e-05, -7.4659e-05,  6.6260e-05, -8.5032e-05,
         -3.2779e-03,  2.6401e-02,  5.5145e-03, -6.7237e-01, -5.1775e-01,
          3.5840e-01, -3.8816e-01,  1.1076e-03],
        [ 1.9836e-02,  3.0009e-01,  4.2238e-01, -8.2052e-01,  2.3561e-01,
          4.8651e-02,  1.3063e-04, -1.7382e-03, -2.0411e-04, -3.8496e-05,
          2.3987e-04, -1.0482e-04,  2.4265e-09],
        [ 3.3908e-04,  3.9033e-03,  7.0119e-03, -3.9999e-02,  4.8275e-02,
         -9.9044e-01,  8.2564e-02,  9.0439e-02,  4.0811e-03,  4.0617e-03,
         -9.3771e-04,  1.8925e-03,  3.4706e-06],
        [-3.3554e-05, -1.0848e-04,  3.5318e-04,  5.2056e-03, -3.1158e-03,
          1.2144e-01,  7.5835e-01,  6.3984e-01,  2.3324e-02,  1.3616e-02,
         -4.1256e-04,  7.0195e-04, -8.4170e-06],
        [-6.9300e-07, -1.6841e-05, -4.6538e-05,  6.3770e-05, -2.0529e-04,
          8.6031e-04,  1.8074e-02, -1.0949e-02, -6.9725e-01,  6.8183e-01,
         -1.5738e-01,  1.5406e-01, -1.4295e-03],
        [-8.4869e-07, -1.7182e-05, -4.7766e-05,  1.2765e-04, -2.1203e-04,
          4.3925e-04, -1.3806e-03, -6.2653e-03,  9.2734e-02,  2.1611e-01,
          8.9551e-01,  3.7777e-01, -4.2259e-03],
        [-2.7264e-09, -3.6299e-08, -2.0111e-07,  4.8477e-07, -2.0288e-06,
          1.1013e-05,  2.0192e-05, -5.5376e-05, -6.3515e-05,  2.0419e-03,
          2.9731e-03,  2.9854e-03,  9.9999e-01]], dtype=torch.float64)
phi0: [ 1.70862159e-01  8.90581798e-01 -6.11325313e-01  8.47922277e-01
  3.92977997e-01 -3.96450596e-04  1.52418882e+00  1.30188600e+00
  1.50969957e-01  2.65265411e-02 -7.05611915e-02 -2.57835790e-03
 -1.17325495e-02]

Stiff Optimization:  message: Optimization terminated successfully.
 success: True
  status: 0
     fun: 0.0519988524254104
       x: [ 1.709e-01]
     nit: 3
   direc: [[ 1.000e+00]]
    nfev: 67

Sloppy Optimization:        message: Optimization terminated successfully.
       success: True
        status: 0
           fun: 0.0324310267435391
             x: [ 8.906e-01 -6.113e-01  8.479e-01  3.930e-01 -3.965e-04
                  1.524e+00  1.302e+00  1.510e-01  2.653e-02 -7.056e-02
                 -2.578e-03 -1.173e-02]
           nit: 1475
          nfev: 2096
 final_simplex: (array([[ 8.906e-01, -6.113e-01, ..., -2.578e-03,
                        -1.173e-02],
                       [ 8.906e-01, -6.113e-01, ..., -2.578e-03,
                        -1.172e-02],
                       ...,
                       [ 8.906e-01, -6.113e-01, ..., -2.578e-03,
                        -1.174e-02],
                       [ 8.906e-01, -6.113e-01, ..., -2.579e-03,
                        -1.174e-02]]), array([ 3.243e-02,  3.243e-02, ...,  3.243e-02,  3.243e-02]))

def func_optimization(params, flag='numpy'):
    
    ##! normalize variables
    params = list(params)
    for idx, param in enumerate(params):
        params[idx] = lower_bounds[idx] + (upper_bounds[idx] - lower_bounds[idx]) * param
    
    A_d, B_d, E_d, SF_1, SF_2, SF_3, SF_4, SF_5, SF_6, SF_7, SF_8, SF_9, SF_10 = params
    
    
    if flag=='numpy':
        nu_d_mod = lambda T: 1e15 * (A_d + B_d * np.exp(E_d/(const_dict['R'] * T)))
    elif flag=='torch':
        nu_d_mod = lambda T: 1e15 * (A_d + B_d * torch.exp(E_d/(const_dict['R'] * T)))
    else:
        raise ValueError(f"{flag} does not exist")
    
    dict_mod_vec = [
    {"id": 2, "rate": None, "model_dict": {"nu_d": nu_d_mod}},
    {"id": 10, "rate": None, "model_dict": {"nu_d": nu_d_mod}},
    {"id": 31, "rate": None, "model_dict": {"SF": SF_2, "nu_d": nu_d_mod}},
    
    {"id": 30, "rate": None, "model_dict": {"SF": SF_1}},
    {"id": 32, "rate": None, "model_dict": {"SF": SF_3}},
    {"id": 33, "rate": None, "model_dict": {"SF": SF_4}},
    {"id": 34, "rate": None, "model_dict": {"SF": SF_5}},
    
    {"id": 35, "rate": None, "model_dict": {"SF": SF_6}},
    {"id": 36, "rate": None, "model_dict": {"SF": SF_7}},
    {"id": 37, "rate": None, "model_dict": {"SF": SF_8}},
    {"id": 38, "rate": None, "model_dict": {"SF": SF_9}},
    {"id": 39, "rate": None, "model_dict": {"SF": SF_10}},
    ]
    
    return dict_mod_vec

